// -----------------------------------------------------------
/*  MIXINS */
// -----------------------------------------------------------

/* 
// Variable to use in the mixins "flex", "grid", "position", "border"
// if we want to keep the defaults rules 
*/
$default: false;

// ------------ Borders
@mixin border($positions: $default, $color: $color-darkgrey, $size: 2px) {
	@if ($positions) {
		@each $position in $positions {
			border-#{$position}: $size solid $color;
		}
	} @else {
		border: $size solid $color;
	}
}

// ------------ FLEXBOX Mixins

@mixin flex(
	$direction,
	$wrap: $default,
	$main_axis: $default,
	$cross_axis: $default
) {
	display: flex;

	// Create a list from parameters of the mixin
	$new-flex: (
		flex-direction: $direction,
		flex-wrap: $wrap,
		justify-content: $main_axis,
		align-items: $cross_axis,
	);

	// Check the list in order to insert or not, the flex rules
	// ( if the parameter in the list is not $d, then add the css rule )
	@each $property, $value in $new-flex {
		@if ($value) {
			#{$property}: $value;
		}
	}
}

// ------------ Position Mixins
@mixin position(
	$position,
	$top: $default,
	$right: $default,
	$bottom: $default,
	$left: $default
) {
	position: $position;
	// Create a list from parameters of the mixin
	$axis: (
		top: $top,
		right: $right,
		bottom: $bottom,
		left: $left,
	);

	// Check the list in order to insert or not, the rules
	// ( if the parameter in the list is not $default, then add the css rule )
	@each $axis-property, $axis-value in $axis {
		@if ($axis-value) {
			#{$axis-property}: $axis-value;
		}
	}
}

// ------------ Banderole mixin
@mixin ribbon($position, $width: 23px) {
	content: "";
    border: 1px solid rgb(177, 177, 177);
	@if $position == right {
		@include position(absolute, $default, -$width, -8px);
        border-left: 5px solid $color-darkgrey;
	} @else {
		@include position(absolute, $default, $default, -10px, -$width);
        border-right: 5px solid $color-darkgrey;
	}
	height: calc(100% - 8px);
	width: calc($width + 1px);
	background-color: rgba(241, 241, 241, 0.904);
	border-bottom: 1px solid;
	transform: skew(0deg, -4deg);
	z-index: -1;
}

// ------------ MediaQueries

@mixin desktop {
	@media screen and (min-width: 800px) {
		@content;
	}
}

// ------------ Animations

// Slide In / Out
@mixin animate-slide($name) {
	transform-origin: right;
	animation: $name 0.4s ease-in-out forwards;
}
